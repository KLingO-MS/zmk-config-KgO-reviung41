/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>
&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | SHFT |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  | SHFT |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | RET  |
//                         | ALT | LWR (BSPC) | SPC | RSE (SPC) | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp LSHFT &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp RSHFT
   &kp LCTRL &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RET
                 &kp LALT  &lt 1 BSPC &kp SPACE &lt 2 SPACE &kp RGUI
                        >;
                };

                lower_layer {
// ------------------------------------------------------------------------------------
// | ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |     |  _  |  +  |  {  |  }  | "|" |   | PGUP| HOME|  UP | END | INS | SHFT |
// |     | GUI |     |     |  "  |  Ëœ  |   | PGDN| LEFT| DOWN| RGT | PRSC| RET  |
//                        |     |     | SPC | ADJ (BSPC) |     |
                        bindings = <
   &kp ESC &kp EXCL  &kp AT      &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp DEL
   &trans  &kp UNDER &kp PLUS    &kp LBRC &kp RBRC &kp PIPE       &kp PG_UP &kp HOME &kp UP    &kp END   &kp INS   &trans
   &trans  &kp LGUI  &none       &none    &kp DQT  &kp TILDE      &kp PG_DN &kp LEFT &kp DOWN  &kp RIGHT &kp PSCRN &trans
                                 &trans      &trans       &kp SPC        &lt 3 BSPC      &trans
                        >;
                };

                raise_layer {
// ----------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |     |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |     | GUI |     |     |  '  |  `  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                 |     | ADJ (BSPC) | SPC |     |     |
                        bindings = <
   &kp ESC &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
   &trans  &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH      &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
   &trans  &kp LGUI  &none     &none     &kp SQT   &kp GRAVE     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                                &trans      &lt 3 BSPC      &kp SPC        &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ | RGB SPD+ | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR  |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- | RGB SPD- |         |   |       |     |     |     |     | OUT_TOG |
// | M_PREV   | M_PLAYP  | P_NEXT   | MUTE     | VOL_DN   | VOL_UP  |   |       |     |     |     |     |         |
//                                              |     |     |     |     |     |
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &rgb_ug RGB_SPI &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &rgb_ug RGB_SPD &none              &none        &none        &none        &none        &none        &out OUT_TOG
   &kp C_PREV      &kp C_PP        &kp C_NEXT      &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP       &none        &none        &none        &none        &none        &none
                                                             &trans      &trans       &tog 3        &trans      &trans
                        >;
                };
        };
};
